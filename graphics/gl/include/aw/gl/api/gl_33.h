/*
 * This file is automatically generated.
 */
#ifndef aw_gl_ext_opengl_3_3_h
#define aw_gl_ext_opengl_3_3_h
#include "types.h"
#include "gl_enum_33.h"

#include <aw/graphics/export.h>

namespace gl {
namespace ext {
struct load_result {
	explicit operator bool() const
	{
		return is_loaded;
	}
	
	int num_missing() const { return missing; }
	
	load_result() = default;
	load_result(bool is_loaded, int num_missing)
		: is_loaded{is_loaded}, missing{num_missing}
	{}

private:
	bool is_loaded = false;
	int  missing   = 0;
};
} //namespace ext

namespace sys {
AW_GRAPHICS_EXP ext::load_result load_functions_3_3();

AW_GRAPHICS_EXP int get_minor_version();
AW_GRAPHICS_EXP int get_major_version();
AW_GRAPHICS_EXP bool is_version_geq(int major, int minor);
} //namespace sys

/* gl version 1.0 */
AW_GRAPHICS_EXP extern void (AWGL_API* blend_func)(GLenum sfactor, GLenum dfactor);
AW_GRAPHICS_EXP extern void (AWGL_API* clear)(GLbitfield mask);
AW_GRAPHICS_EXP extern void (AWGL_API* clear_color)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
AW_GRAPHICS_EXP extern void (AWGL_API* clear_depth)(GLdouble depth);
AW_GRAPHICS_EXP extern void (AWGL_API* clear_stencil)(GLint s);
AW_GRAPHICS_EXP extern void (AWGL_API* color_mask)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
AW_GRAPHICS_EXP extern void (AWGL_API* cull_face)(GLenum mode);
AW_GRAPHICS_EXP extern void (AWGL_API* depth_func)(GLenum func);
AW_GRAPHICS_EXP extern void (AWGL_API* depth_mask)(GLboolean flag);
AW_GRAPHICS_EXP extern void (AWGL_API* depth_range)(GLdouble ren_near, GLdouble ren_far);
AW_GRAPHICS_EXP extern void (AWGL_API* disable)(GLenum cap);
AW_GRAPHICS_EXP extern void (AWGL_API* draw_buffer)(GLenum buf);
AW_GRAPHICS_EXP extern void (AWGL_API* enable)(GLenum cap);
AW_GRAPHICS_EXP extern void (AWGL_API* finish)(void);
AW_GRAPHICS_EXP extern void (AWGL_API* flush)(void);
AW_GRAPHICS_EXP extern void (AWGL_API* front_face)(GLenum mode);
AW_GRAPHICS_EXP extern void (AWGL_API* get_boolean_v)(GLenum pname, GLboolean * data);
AW_GRAPHICS_EXP extern void (AWGL_API* get_double_v)(GLenum pname, GLdouble * data);
AW_GRAPHICS_EXP extern GLenum (AWGL_API* get_error)(void);
AW_GRAPHICS_EXP extern void (AWGL_API* get_float_v)(GLenum pname, GLfloat * data);
AW_GRAPHICS_EXP extern void (AWGL_API* get_integer_v)(GLenum pname, GLint * data);
AW_GRAPHICS_EXP extern const GLubyte * (AWGL_API* get_string)(GLenum name);
AW_GRAPHICS_EXP extern void (AWGL_API* get_tex_image)(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
AW_GRAPHICS_EXP extern void (AWGL_API* get_tex_level_parameter_fv)(GLenum target, GLint level, GLenum pname, GLfloat * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_tex_level_parameter_iv)(GLenum target, GLint level, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_tex_parameter_fv)(GLenum target, GLenum pname, GLfloat * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_tex_parameter_iv)(GLenum target, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* hint)(GLenum target, GLenum mode);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_enabled)(GLenum cap);
AW_GRAPHICS_EXP extern void (AWGL_API* line_width)(GLfloat width);
AW_GRAPHICS_EXP extern void (AWGL_API* logic_op)(GLenum opcode);
AW_GRAPHICS_EXP extern void (AWGL_API* pixel_store_f)(GLenum pname, GLfloat param);
AW_GRAPHICS_EXP extern void (AWGL_API* pixel_store_i)(GLenum pname, GLint param);
AW_GRAPHICS_EXP extern void (AWGL_API* point_size)(GLfloat size);
AW_GRAPHICS_EXP extern void (AWGL_API* polygon_mode)(GLenum face, GLenum mode);
AW_GRAPHICS_EXP extern void (AWGL_API* read_buffer)(GLenum src);
AW_GRAPHICS_EXP extern void (AWGL_API* read_pixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
AW_GRAPHICS_EXP extern void (AWGL_API* scissor)(GLint x, GLint y, GLsizei width, GLsizei height);
AW_GRAPHICS_EXP extern void (AWGL_API* stencil_func)(GLenum func, GLint ref, GLuint mask);
AW_GRAPHICS_EXP extern void (AWGL_API* stencil_mask)(GLuint mask);
AW_GRAPHICS_EXP extern void (AWGL_API* stencil_op)(GLenum fail, GLenum zfail, GLenum zpass);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_image_1d)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_image_2d)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_parameter_f)(GLenum target, GLenum pname, GLfloat param);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_parameter_fv)(GLenum target, GLenum pname, const GLfloat * params);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_parameter_i)(GLenum target, GLenum pname, GLint param);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_parameter_iv)(GLenum target, GLenum pname, const GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* viewport)(GLint x, GLint y, GLsizei width, GLsizei height);

/* gl version 1.1 */
AW_GRAPHICS_EXP extern void (AWGL_API* bind_texture)(GLenum target, GLuint texture);
AW_GRAPHICS_EXP extern void (AWGL_API* copy_tex_image_1d)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
AW_GRAPHICS_EXP extern void (AWGL_API* copy_tex_image_2d)(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
AW_GRAPHICS_EXP extern void (AWGL_API* copy_tex_sub_image_1d)(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
AW_GRAPHICS_EXP extern void (AWGL_API* copy_tex_sub_image_2d)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
AW_GRAPHICS_EXP extern void (AWGL_API* delete_textures)(GLsizei n, const GLuint * textures);
AW_GRAPHICS_EXP extern void (AWGL_API* draw_arrays)(GLenum mode, GLint first, GLsizei count);
AW_GRAPHICS_EXP extern void (AWGL_API* draw_elements)(GLenum mode, GLsizei count, GLenum type, const void * indices);
AW_GRAPHICS_EXP extern void (AWGL_API* gen_textures)(GLsizei n, GLuint * textures);
AW_GRAPHICS_EXP extern void (AWGL_API* get_pointer_v)(GLenum pname, void ** params);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_texture)(GLuint texture);
AW_GRAPHICS_EXP extern void (AWGL_API* polygon_offset)(GLfloat factor, GLfloat units);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_sub_image_1d)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_sub_image_2d)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);

/* gl version 1.2 */
AW_GRAPHICS_EXP extern void (AWGL_API* copy_tex_sub_image_3d)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
AW_GRAPHICS_EXP extern void (AWGL_API* draw_range_elements)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_image_3d)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_sub_image_3d)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);

/* gl version 1.3 */
AW_GRAPHICS_EXP extern void (AWGL_API* active_texture)(GLenum texture);
AW_GRAPHICS_EXP extern void (AWGL_API* compressed_tex_image_1d)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
AW_GRAPHICS_EXP extern void (AWGL_API* compressed_tex_image_2d)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
AW_GRAPHICS_EXP extern void (AWGL_API* compressed_tex_image_3d)(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
AW_GRAPHICS_EXP extern void (AWGL_API* compressed_tex_sub_image_1d)(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
AW_GRAPHICS_EXP extern void (AWGL_API* compressed_tex_sub_image_2d)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
AW_GRAPHICS_EXP extern void (AWGL_API* compressed_tex_sub_image_3d)(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
AW_GRAPHICS_EXP extern void (AWGL_API* get_compressed_tex_image)(GLenum target, GLint level, void * img);
AW_GRAPHICS_EXP extern void (AWGL_API* sample_coverage)(GLfloat value, GLboolean invert);

/* gl version 1.4 */
AW_GRAPHICS_EXP extern void (AWGL_API* blend_color)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
AW_GRAPHICS_EXP extern void (AWGL_API* blend_equation)(GLenum mode);
AW_GRAPHICS_EXP extern void (AWGL_API* blend_func_separate)(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
AW_GRAPHICS_EXP extern void (AWGL_API* multi_draw_arrays)(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
AW_GRAPHICS_EXP extern void (AWGL_API* multi_draw_elements)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
AW_GRAPHICS_EXP extern void (AWGL_API* point_parameter_f)(GLenum pname, GLfloat param);
AW_GRAPHICS_EXP extern void (AWGL_API* point_parameter_fv)(GLenum pname, const GLfloat * params);
AW_GRAPHICS_EXP extern void (AWGL_API* point_parameter_i)(GLenum pname, GLint param);
AW_GRAPHICS_EXP extern void (AWGL_API* point_parameter_iv)(GLenum pname, const GLint * params);

/* gl version 1.5 */
AW_GRAPHICS_EXP extern void (AWGL_API* begin_query)(GLenum target, GLuint id);
AW_GRAPHICS_EXP extern void (AWGL_API* bind_buffer)(GLenum target, GLuint buffer);
AW_GRAPHICS_EXP extern void (AWGL_API* buffer_data)(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
AW_GRAPHICS_EXP extern void (AWGL_API* buffer_sub_data)(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
AW_GRAPHICS_EXP extern void (AWGL_API* delete_buffers)(GLsizei n, const GLuint * buffers);
AW_GRAPHICS_EXP extern void (AWGL_API* delete_queries)(GLsizei n, const GLuint * ids);
AW_GRAPHICS_EXP extern void (AWGL_API* end_query)(GLenum target);
AW_GRAPHICS_EXP extern void (AWGL_API* gen_buffers)(GLsizei n, GLuint * buffers);
AW_GRAPHICS_EXP extern void (AWGL_API* gen_queries)(GLsizei n, GLuint * ids);
AW_GRAPHICS_EXP extern void (AWGL_API* get_buffer_parameter_iv)(GLenum target, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_buffer_pointer_v)(GLenum target, GLenum pname, void ** params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_buffer_sub_data)(GLenum target, GLintptr offset, GLsizeiptr size, void * data);
AW_GRAPHICS_EXP extern void (AWGL_API* get_query_object_iv)(GLuint id, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_query_object_uiv)(GLuint id, GLenum pname, GLuint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_query_iv)(GLenum target, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_buffer)(GLuint buffer);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_query)(GLuint id);
AW_GRAPHICS_EXP extern void * (AWGL_API* map_buffer)(GLenum target, GLenum access);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* unmap_buffer)(GLenum target);

/* gl version 2.0 */
AW_GRAPHICS_EXP extern void (AWGL_API* attach_shader)(GLuint program, GLuint shader);
AW_GRAPHICS_EXP extern void (AWGL_API* bind_attrib_location)(GLuint program, GLuint index, const GLchar * name);
AW_GRAPHICS_EXP extern void (AWGL_API* blend_equation_separate)(GLenum modeRGB, GLenum modeAlpha);
AW_GRAPHICS_EXP extern void (AWGL_API* compile_shader)(GLuint shader);
AW_GRAPHICS_EXP extern GLuint (AWGL_API* create_program)(void);
AW_GRAPHICS_EXP extern GLuint (AWGL_API* create_shader)(GLenum type);
AW_GRAPHICS_EXP extern void (AWGL_API* delete_program)(GLuint program);
AW_GRAPHICS_EXP extern void (AWGL_API* delete_shader)(GLuint shader);
AW_GRAPHICS_EXP extern void (AWGL_API* detach_shader)(GLuint program, GLuint shader);
AW_GRAPHICS_EXP extern void (AWGL_API* disable_vertex_attrib_array)(GLuint index);
AW_GRAPHICS_EXP extern void (AWGL_API* draw_buffers)(GLsizei n, const GLenum * bufs);
AW_GRAPHICS_EXP extern void (AWGL_API* enable_vertex_attrib_array)(GLuint index);
AW_GRAPHICS_EXP extern void (AWGL_API* get_active_attrib)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
AW_GRAPHICS_EXP extern void (AWGL_API* get_active_uniform)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
AW_GRAPHICS_EXP extern void (AWGL_API* get_attached_shaders)(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
AW_GRAPHICS_EXP extern GLint (AWGL_API* get_attrib_location)(GLuint program, const GLchar * name);
AW_GRAPHICS_EXP extern void (AWGL_API* get_program_info_log)(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
AW_GRAPHICS_EXP extern void (AWGL_API* get_program_iv)(GLuint program, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_shader_info_log)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
AW_GRAPHICS_EXP extern void (AWGL_API* get_shader_source)(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
AW_GRAPHICS_EXP extern void (AWGL_API* get_shader_iv)(GLuint shader, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern GLint (AWGL_API* get_uniform_location)(GLuint program, const GLchar * name);
AW_GRAPHICS_EXP extern void (AWGL_API* get_uniform_fv)(GLuint program, GLint location, GLfloat * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_uniform_iv)(GLuint program, GLint location, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_vertex_attrib_pointer_v)(GLuint index, GLenum pname, void ** pointer);
AW_GRAPHICS_EXP extern void (AWGL_API* get_vertex_attrib_dv)(GLuint index, GLenum pname, GLdouble * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_vertex_attrib_fv)(GLuint index, GLenum pname, GLfloat * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_vertex_attrib_iv)(GLuint index, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_program)(GLuint program);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_shader)(GLuint shader);
AW_GRAPHICS_EXP extern void (AWGL_API* link_program)(GLuint program);
AW_GRAPHICS_EXP extern void (AWGL_API* shader_source)(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
AW_GRAPHICS_EXP extern void (AWGL_API* stencil_func_separate)(GLenum face, GLenum func, GLint ref, GLuint mask);
AW_GRAPHICS_EXP extern void (AWGL_API* stencil_mask_separate)(GLenum face, GLuint mask);
AW_GRAPHICS_EXP extern void (AWGL_API* stencil_op_separate)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_1f)(GLint location, GLfloat v0);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_1fv)(GLint location, GLsizei count, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_1i)(GLint location, GLint v0);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_1iv)(GLint location, GLsizei count, const GLint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_2f)(GLint location, GLfloat v0, GLfloat v1);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_2fv)(GLint location, GLsizei count, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_2i)(GLint location, GLint v0, GLint v1);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_2iv)(GLint location, GLsizei count, const GLint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_3f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_3fv)(GLint location, GLsizei count, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_3i)(GLint location, GLint v0, GLint v1, GLint v2);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_3iv)(GLint location, GLsizei count, const GLint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_4f)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_4fv)(GLint location, GLsizei count, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_4i)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_4iv)(GLint location, GLsizei count, const GLint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_matrix_2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_matrix_3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_matrix_4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* use_program)(GLuint program);
AW_GRAPHICS_EXP extern void (AWGL_API* validate_program)(GLuint program);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_1d)(GLuint index, GLdouble x);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_1dv)(GLuint index, const GLdouble * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_1f)(GLuint index, GLfloat x);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_1fv)(GLuint index, const GLfloat * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_1s)(GLuint index, GLshort x);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_1sv)(GLuint index, const GLshort * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_2d)(GLuint index, GLdouble x, GLdouble y);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_2dv)(GLuint index, const GLdouble * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_2f)(GLuint index, GLfloat x, GLfloat y);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_2fv)(GLuint index, const GLfloat * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_2s)(GLuint index, GLshort x, GLshort y);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_2sv)(GLuint index, const GLshort * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_3d)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_3dv)(GLuint index, const GLdouble * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_3f)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_3fv)(GLuint index, const GLfloat * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_3s)(GLuint index, GLshort x, GLshort y, GLshort z);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_3sv)(GLuint index, const GLshort * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4nbv)(GLuint index, const GLbyte * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4niv)(GLuint index, const GLint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4nsv)(GLuint index, const GLshort * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4nub)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4nubv)(GLuint index, const GLubyte * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4nuiv)(GLuint index, const GLuint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4nusv)(GLuint index, const GLushort * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4bv)(GLuint index, const GLbyte * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4d)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4dv)(GLuint index, const GLdouble * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4f)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4fv)(GLuint index, const GLfloat * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4iv)(GLuint index, const GLint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4s)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4sv)(GLuint index, const GLshort * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4ubv)(GLuint index, const GLubyte * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4uiv)(GLuint index, const GLuint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_4usv)(GLuint index, const GLushort * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_pointer)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);

/* gl version 2.1 */
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_matrix_2x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_matrix_2x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_matrix_3x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_matrix_3x4fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_matrix_4x2fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_matrix_4x3fv)(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);

/* gl version 3.0 */
AW_GRAPHICS_EXP extern void (AWGL_API* begin_conditional_render)(GLuint id, GLenum mode);
AW_GRAPHICS_EXP extern void (AWGL_API* begin_transform_feedback)(GLenum primitiveMode);
AW_GRAPHICS_EXP extern void (AWGL_API* bind_buffer_base)(GLenum target, GLuint index, GLuint buffer);
AW_GRAPHICS_EXP extern void (AWGL_API* bind_buffer_range)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
AW_GRAPHICS_EXP extern void (AWGL_API* bind_frag_data_location)(GLuint program, GLuint color, const GLchar * name);
AW_GRAPHICS_EXP extern void (AWGL_API* bind_framebuffer)(GLenum target, GLuint framebuffer);
AW_GRAPHICS_EXP extern void (AWGL_API* bind_renderbuffer)(GLenum target, GLuint renderbuffer);
AW_GRAPHICS_EXP extern void (AWGL_API* bind_vertex_array)(GLuint ren_array);
AW_GRAPHICS_EXP extern void (AWGL_API* blit_framebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
AW_GRAPHICS_EXP extern GLenum (AWGL_API* check_framebuffer_status)(GLenum target);
AW_GRAPHICS_EXP extern void (AWGL_API* clamp_color)(GLenum target, GLenum clamp);
AW_GRAPHICS_EXP extern void (AWGL_API* clear_bufferf_i)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
AW_GRAPHICS_EXP extern void (AWGL_API* clear_buffer_fv)(GLenum buffer, GLint drawbuffer, const GLfloat * value);
AW_GRAPHICS_EXP extern void (AWGL_API* clear_buffer_iv)(GLenum buffer, GLint drawbuffer, const GLint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* clear_buffer_uiv)(GLenum buffer, GLint drawbuffer, const GLuint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* color_mask_i)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
AW_GRAPHICS_EXP extern void (AWGL_API* delete_framebuffers)(GLsizei n, const GLuint * framebuffers);
AW_GRAPHICS_EXP extern void (AWGL_API* delete_renderbuffers)(GLsizei n, const GLuint * renderbuffers);
AW_GRAPHICS_EXP extern void (AWGL_API* delete_vertex_arrays)(GLsizei n, const GLuint * arrays);
AW_GRAPHICS_EXP extern void (AWGL_API* disable_i)(GLenum target, GLuint index);
AW_GRAPHICS_EXP extern void (AWGL_API* enable_i)(GLenum target, GLuint index);
AW_GRAPHICS_EXP extern void (AWGL_API* end_conditional_render)(void);
AW_GRAPHICS_EXP extern void (AWGL_API* end_transform_feedback)(void);
AW_GRAPHICS_EXP extern void (AWGL_API* flush_mapped_buffer_range)(GLenum target, GLintptr offset, GLsizeiptr length);
AW_GRAPHICS_EXP extern void (AWGL_API* framebuffer_renderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
AW_GRAPHICS_EXP extern void (AWGL_API* framebuffer_texture_1d)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
AW_GRAPHICS_EXP extern void (AWGL_API* framebuffer_texture_2d)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
AW_GRAPHICS_EXP extern void (AWGL_API* framebuffer_texture_3d)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
AW_GRAPHICS_EXP extern void (AWGL_API* framebuffer_texture_layer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
AW_GRAPHICS_EXP extern void (AWGL_API* gen_framebuffers)(GLsizei n, GLuint * framebuffers);
AW_GRAPHICS_EXP extern void (AWGL_API* gen_renderbuffers)(GLsizei n, GLuint * renderbuffers);
AW_GRAPHICS_EXP extern void (AWGL_API* gen_vertex_arrays)(GLsizei n, GLuint * arrays);
AW_GRAPHICS_EXP extern void (AWGL_API* generate_mipmap)(GLenum target);
AW_GRAPHICS_EXP extern void (AWGL_API* get_boolean_iv)(GLenum target, GLuint index, GLboolean * data);
AW_GRAPHICS_EXP extern GLint (AWGL_API* get_frag_data_location)(GLuint program, const GLchar * name);
AW_GRAPHICS_EXP extern void (AWGL_API* get_framebuffer_attachment_parameter_iv)(GLenum target, GLenum attachment, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_integer_iv)(GLenum target, GLuint index, GLint * data);
AW_GRAPHICS_EXP extern void (AWGL_API* get_renderbuffer_parameter_iv)(GLenum target, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern const GLubyte * (AWGL_API* get_string_i)(GLenum name, GLuint index);
AW_GRAPHICS_EXP extern void (AWGL_API* get_tex_parameter_i_iv)(GLenum target, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_tex_parameter_i_uiv)(GLenum target, GLenum pname, GLuint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_transform_feedback_varying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
AW_GRAPHICS_EXP extern void (AWGL_API* get_uniform_uiv)(GLuint program, GLint location, GLuint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_vertex_attrib_i_iv)(GLuint index, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_vertex_attrib_i_uiv)(GLuint index, GLenum pname, GLuint * params);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_enabled_i)(GLenum target, GLuint index);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_framebuffer)(GLuint framebuffer);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_renderbuffer)(GLuint renderbuffer);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_vertex_array)(GLuint ren_array);
AW_GRAPHICS_EXP extern void * (AWGL_API* map_buffer_range)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
AW_GRAPHICS_EXP extern void (AWGL_API* renderbuffer_storage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
AW_GRAPHICS_EXP extern void (AWGL_API* renderbuffer_storage_multisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_parameter_i_iv)(GLenum target, GLenum pname, const GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_parameter_i_uiv)(GLenum target, GLenum pname, const GLuint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* transform_feedback_varyings)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_1ui)(GLint location, GLuint v0);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_1uiv)(GLint location, GLsizei count, const GLuint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_2ui)(GLint location, GLuint v0, GLuint v1);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_2uiv)(GLint location, GLsizei count, const GLuint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_3uiv)(GLint location, GLsizei count, const GLuint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_4uiv)(GLint location, GLsizei count, const GLuint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_1i)(GLuint index, GLint x);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_1iv)(GLuint index, const GLint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_1ui)(GLuint index, GLuint x);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_1uiv)(GLuint index, const GLuint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_2i)(GLuint index, GLint x, GLint y);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_2iv)(GLuint index, const GLint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_2ui)(GLuint index, GLuint x, GLuint y);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_2uiv)(GLuint index, const GLuint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_3i)(GLuint index, GLint x, GLint y, GLint z);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_3iv)(GLuint index, const GLint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_3ui)(GLuint index, GLuint x, GLuint y, GLuint z);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_3uiv)(GLuint index, const GLuint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_4bv)(GLuint index, const GLbyte * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_4i)(GLuint index, GLint x, GLint y, GLint z, GLint w);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_4iv)(GLuint index, const GLint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_4sv)(GLuint index, const GLshort * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_4ubv)(GLuint index, const GLubyte * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_4uiv)(GLuint index, const GLuint * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_4usv)(GLuint index, const GLushort * v);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_i_pointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);

/* gl version 3.1 */
AW_GRAPHICS_EXP extern void (AWGL_API* copy_buffer_sub_data)(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
AW_GRAPHICS_EXP extern void (AWGL_API* draw_arrays_instanced)(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
AW_GRAPHICS_EXP extern void (AWGL_API* draw_elements_instanced)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
AW_GRAPHICS_EXP extern void (AWGL_API* get_active_uniform_block_name)(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
AW_GRAPHICS_EXP extern void (AWGL_API* get_active_uniform_block_iv)(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_active_uniform_name)(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
AW_GRAPHICS_EXP extern void (AWGL_API* get_active_uniforms_iv)(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern GLuint (AWGL_API* get_uniform_block_index)(GLuint program, const GLchar * uniformBlockName);
AW_GRAPHICS_EXP extern void (AWGL_API* get_uniform_indices)(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
AW_GRAPHICS_EXP extern void (AWGL_API* primitive_restart_index)(GLuint index);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_buffer)(GLenum target, GLenum internalformat, GLuint buffer);
AW_GRAPHICS_EXP extern void (AWGL_API* uniform_block_binding)(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);

/* gl version 3.2 */
AW_GRAPHICS_EXP extern GLenum (AWGL_API* client_wait_sync)(GLsync sync, GLbitfield flags, GLuint64 timeout);
AW_GRAPHICS_EXP extern void (AWGL_API* delete_sync)(GLsync sync);
AW_GRAPHICS_EXP extern void (AWGL_API* draw_elements_base_vertex)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
AW_GRAPHICS_EXP extern void (AWGL_API* draw_elements_instanced_base_vertex)(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
AW_GRAPHICS_EXP extern void (AWGL_API* draw_range_elements_base_vertex)(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
AW_GRAPHICS_EXP extern GLsync (AWGL_API* fence_sync)(GLenum condition, GLbitfield flags);
AW_GRAPHICS_EXP extern void (AWGL_API* framebuffer_texture)(GLenum target, GLenum attachment, GLuint texture, GLint level);
AW_GRAPHICS_EXP extern void (AWGL_API* get_buffer_parameter_i64v)(GLenum target, GLenum pname, GLint64 * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_integer_64iv)(GLenum target, GLuint index, GLint64 * data);
AW_GRAPHICS_EXP extern void (AWGL_API* get_integer_64v)(GLenum pname, GLint64 * data);
AW_GRAPHICS_EXP extern void (AWGL_API* get_multisample_fv)(GLenum pname, GLuint index, GLfloat * val);
AW_GRAPHICS_EXP extern void (AWGL_API* get_sync_iv)(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_sync)(GLsync sync);
AW_GRAPHICS_EXP extern void (AWGL_API* multi_draw_elements_base_vertex)(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
AW_GRAPHICS_EXP extern void (AWGL_API* provoking_vertex)(GLenum mode);
AW_GRAPHICS_EXP extern void (AWGL_API* sample_mask_i)(GLuint maskNumber, GLbitfield mask);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_image_2d_multisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
AW_GRAPHICS_EXP extern void (AWGL_API* tex_image_3d_multisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
AW_GRAPHICS_EXP extern void (AWGL_API* wait_sync)(GLsync sync, GLbitfield flags, GLuint64 timeout);

/* gl version 3.3 */
AW_GRAPHICS_EXP extern void (AWGL_API* bind_frag_data_location_indexed)(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
AW_GRAPHICS_EXP extern void (AWGL_API* bind_sampler)(GLuint unit, GLuint sampler);
AW_GRAPHICS_EXP extern void (AWGL_API* delete_samplers)(GLsizei count, const GLuint * samplers);
AW_GRAPHICS_EXP extern void (AWGL_API* gen_samplers)(GLsizei count, GLuint * samplers);
AW_GRAPHICS_EXP extern GLint (AWGL_API* get_frag_data_index)(GLuint program, const GLchar * name);
AW_GRAPHICS_EXP extern void (AWGL_API* get_query_object_i64v)(GLuint id, GLenum pname, GLint64 * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_query_object_ui64v)(GLuint id, GLenum pname, GLuint64 * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_sampler_parameter_i_iv)(GLuint sampler, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_sampler_parameter_i_uiv)(GLuint sampler, GLenum pname, GLuint * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_sampler_parameter_fv)(GLuint sampler, GLenum pname, GLfloat * params);
AW_GRAPHICS_EXP extern void (AWGL_API* get_sampler_parameter_iv)(GLuint sampler, GLenum pname, GLint * params);
AW_GRAPHICS_EXP extern GLboolean (AWGL_API* is_sampler)(GLuint sampler);
AW_GRAPHICS_EXP extern void (AWGL_API* query_counter)(GLuint id, GLenum target);
AW_GRAPHICS_EXP extern void (AWGL_API* sampler_parameter_i_iv)(GLuint sampler, GLenum pname, const GLint * param);
AW_GRAPHICS_EXP extern void (AWGL_API* sampler_parameter_i_uiv)(GLuint sampler, GLenum pname, const GLuint * param);
AW_GRAPHICS_EXP extern void (AWGL_API* sampler_parameter_f)(GLuint sampler, GLenum pname, GLfloat param);
AW_GRAPHICS_EXP extern void (AWGL_API* sampler_parameter_fv)(GLuint sampler, GLenum pname, const GLfloat * param);
AW_GRAPHICS_EXP extern void (AWGL_API* sampler_parameter_i)(GLuint sampler, GLenum pname, GLint param);
AW_GRAPHICS_EXP extern void (AWGL_API* sampler_parameter_iv)(GLuint sampler, GLenum pname, const GLint * param);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_divisor)(GLuint index, GLuint divisor);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_p_1ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_p_1uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_p_2ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_p_2uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_p_3ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_p_3uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_p_4ui)(GLuint index, GLenum type, GLboolean normalized, GLuint value);
AW_GRAPHICS_EXP extern void (AWGL_API* vertex_attrib_p_4uiv)(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);

} //namespace gl
#endif//aw_gl_ext_opengl_3_3_h
